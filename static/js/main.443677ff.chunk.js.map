{"version":3,"sources":["routes/store.js","routes/Home.js","components/App.js","index.js"],"names":["initialState","score","count","win","draw","computers","num","store","createStore","state","action","type","connect","result","dispatch","nGame","gameEnd","arrayRSP","scoreReset","onSubmit","e","preventDefault","mine","target","id","random","Math","floor","computerRSP","comGame","console","log","parseInt","className","placeholder","onChange","value","onClick","previousSibling","App","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.443677ff.chunk.js","sourcesContent":["import {createStore} from \"redux\";\n\nconst WIN = \"WIN\";\nconst LOSE = \"LOSE\";\nconst DRAW = \"DRAW\";\nconst COMPUTER = \"COMPUTER\";\nconst RESET = \"RESET\";\nconst NUM = \"NUM\";\n\n// 상태값 초기화 \nconst initialState = {\n    score: 0,\n    count: 0,\n    win: 0,\n    draw: 0,\n    computers: '',\n    num: 0\n}\n\n\nexport const winGame = function(){\n    return { type: WIN }\n}\nexport const loseGame = function(){\n    return { type: LOSE }\n}\nexport const drawGame = function(){\n    return { type: DRAW }\n}\nexport const comGame = function(computers){\n    return { type: COMPUTER, computers}\n}\nexport const resetGame = function(){\n    return { type: RESET}\n}\nexport const numGame = function(num){\n    return { type: NUM, num}\n}\n\nconst reducer = (state=initialState, action) => {\n    // console.log(action);\n    switch(action.type){\n        case WIN:\n            return {...state, score: state.score + 1, count: state.count + 1, win: state.win + 1};\n        case LOSE:\n            return {...state, score: state.score - 1, count: state.count + 1};\n        case DRAW:\n            return {...state, score: state.score, count: state.count + 1, draw: state.draw + 1};\n        case COMPUTER:\n            return {...state, computers: action.computers};\n        case RESET:\n            return state = initialState;\n        case NUM:\n            return {...state, num: state.num};\n        default:\n            return state;\n    }\n}\nconst store = createStore(reducer);\n\nexport default store;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport { winGame } from \"./store\";\nimport { loseGame } from \"./store\";\nimport { drawGame } from \"./store\";\nimport { comGame } from \"./store\";\nimport { resetGame } from \"./store\";\nimport { numGame }  from \"./store\";\n\n\n\nfunction Home({result, dispatch}){\n    let nGame = '';\n    const gameStart = function(e){\n        scoreReset()\n        nGame = e.target.previousSibling.value\n        dispatch(numGame(nGame))\n        if(nGame == ''){\n            nGame = 5;\n        }\n        // btnScissor.disabled = false;\n        // btnRock.disabled = false;\n        // btnPaper.disabled = false;\n        // timer.textContent = nGame + \"판 승부 시작!\"\n    }\n    \n    const gameEnd = function(){\n        // const result = store.getState();\n        // myScore.textContent = \"게임 종료! \"+ result.count +\"판 중 \" + result.win+ \"승(\" + result.draw + \"무)을 거둬 획득한 점수: \" + result.score;\n        // btnScissor.disabled = true;\n        // btnRock.disabled = true;\n        // btnPaper.disabled = true;\n        // timer.textContent = \"판 수를 입력하고 게임을 다시 시작하세요!\";\n    }\n    const arrayRSP = ['ss', 'rr', 'pp']; //ss:가위 rr:바위 pp:보\n    const computerRSP = function(){\n        const random = Math.floor(Math.random()*3);\n        const com = arrayRSP[random];\n        return com;\n    }\n    const scoreReset = function(){\n        dispatch(resetGame());\n    }\n    const showResult = function(){\n        console.log(result);\n        if(parseInt(result.num) === result.count){\n            gameEnd()\n        \n        }else if(parseInt(result.num) < result.count){\n            // alert(nGame + '판 종료되었습니다. 판 수를 다시 입력하고 게임을 시작하세요!')\n            gameEnd()\n    \n        }else{\n            // myScore.textContent = \"총 \"+ result.count +\"게임 중 현재 점수: \" + result.score;\n            // computerScreen.textContent = \"컴퓨터: \" + whatcom\n        }\n    }\n    function onChange(e){\n        nGame = e.target.value;\n        console.log(nGame);\n    }\n    function onSubmit(e){\n        e.preventDefault();\n        // console.log(result);\n        // const result = store.getState();\n        const mine = e.target.id;\n        let computers = computerRSP();\n        \n        if(mine === computers){\n            dispatch(drawGame());\n        }else{\n            if(mine+computers === \"sspp\"){\n                dispatch(winGame());\n            }if(mine+computers === \"rrss\"){\n                dispatch(winGame());\n            }if(mine+computers === \"pprr\"){\n                dispatch(winGame());\n            }if(mine+computers === \"ssrr\"){\n                dispatch(loseGame());\n            }if(mine+computers === \"rrpp\"){\n                dispatch(loseGame());\n            }if(mine+computers === \"ppss\"){\n                dispatch(loseGame());\n            }\n        }\n        if(computers === \"rr\"){\n            computers = \"바위\";\n        }else if(computers === \"ss\"){\n            computers = \"가위\";\n        }else if(computers === \"pp\"){\n            computers = \"보\";\n        }\n        dispatch(comGame(computers));\n        showResult();\n    }\n\n    return (\n        <>\n        <form>\n            <h1>가위바위보 React redux</h1>\n            <div><input className=\"inputGame\" placeholder=\"판 수 입력 (미입력 시 5판)\" onChange={onChange}/> \n            <button className=\"btnStart\" onClick={gameStart}> 게임 시작 </button>  </div>\n            <div className=\"timer\" > </div>\n            <div className=\"computer\" > \n            Computer: {result.computers} </div>\n            <button onClick={onSubmit} id=\"ss\">가위</button>\n            <button onClick={onSubmit} id=\"rr\">바위</button>\n            <button onClick={onSubmit} id=\"pp\">보</button>\n            <div className=\"myscore\">{result.win}승 {result.draw}무 로 현재 점수는: {result.score} </div>\n            <button className=\"btnEnd\" onClick={gameEnd} > 게임 종료 </button> \n        </form>\n        </>\n    )\n}\n\nfunction mapStateToProps(state){\n    return {result : state};\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {dispatch};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from \"react\";\nimport {HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"../routes/Home\";\n\n\nfunction App(){\n    return (\n    <Router>\n        <Route path=\"/\" exact component={Home}></Route>\n    </Router>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport {Provider} from \"react-redux\";\nimport store from \"./routes/store\";\n\n\nReactDOM.render(\n<Provider store={store}> <App /></Provider>, document.getElementById(\"root\"));"],"sourceRoot":""}